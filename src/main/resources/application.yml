spring:
  application:
    name: workplace_reservation
  liquibase:
    enabled: true
  datasource:
    username: admin
    password: root
    url: jdbc:postgresql://localhost:5433/workplace-reservation-db
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: true
        default_schema: workplace_reservation
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8180/realms/workplace_reservation
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
      client:
        registration:
          keycloak:
            scope: openid, profile
            authorization-grant-type: authorization_code
            client-id: reservation-app
            client-secret: VRjLSsAD4t9r6Dw8DeBK4oVE2z4gZyFo
        provider:
          keycloak:
            issuer-uri: http://localhost:8180/realms/workplace_reservation
            jwk-set-uri: ${spring.security.oauth2.client.provider.keycloak.issuer-uri}/protocol/openid-connect/certs
            user-name-attribute: preferred_username

springdoc:
  swagger-ui:
    oauth:
      client-id: ${spring.security.oauth2.client.registration.keycloak.client-id}
      client-secret: ${spring.security.oauth2.client.registration.keycloak.client-secret}

keycloak:
  server-url: http://localhost:8180
  realm: workplace_reservation
  username: admin
  password: admin
