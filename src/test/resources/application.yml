spring:
  datasource:
#    url: jdbc:h2:mem:test_mem
#    username: sa
#    password: sa
    driver-class-name: org.postgresql.Driver
  sql:
    init:
      mode: embedded
  liquibase:
    enabled: false
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        show_sql: true
  security:
    oauth2:
#      resourceserver:
#        jwt:
#          issuer-uri: http://localhost:8180/realms/workplace_reservation
#          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
      client:
        registration:
          keycloak:
            scope: openid, profile
            authorization-grant-type: authorization_code
            client-id: reservation-app
            client-secret: VRjLSsAD4t9r6Dw8DeBK4oVE2z4gZyFo
        provider:
          keycloak:
#            issuer-uri: http://localhost:8080/realms/workplace_reservation
#            jwk-set-uri: ${spring.security.oauth2.client.provider.keycloak.issuer-uri}/protocol/openid-connect/certs
            user-name-attribute: preferred_username
#  h2:
#    console:
#      enabled: true

jwt:
  lifetime: 30m
  secret: secret

keycloak:
  realm: workplace_reservation
  username: admin
  password: admin

testcontainers